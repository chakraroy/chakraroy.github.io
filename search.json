[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Blog ini dibuat untuk keperluan menyimpan catatan riset, pekerjaan, dan catatan belajar untuk beragam topik. Mulai dari hal terkait coding hingga yang berhubungan dengan (mungkin) resep masakan (jika diperlukan untuk dimuat di blog ini). Selamat menikmati dan semoga Anda terhibur dan tercerahkan (semoga!).\nSalam hangat kami,\nChakra Roy"
  },
  {
    "objectID": "posts/map_indonesia/index.html",
    "href": "posts/map_indonesia/index.html",
    "title": "Peta Indonesia dengan R",
    "section": "",
    "text": "Article ini membahas tentang statistik indonesia sebagai cartography dasar untuk mengembangkan analisis lebih lanjut. Pada peta ini, kita akan menggunakan code sederhana dengan tiga bahasa sekaligus.\n\n\nUntuk memastikan renv yang kita gunakan, bekerja pada environment python yang sesuai dengan apa yang kita rencanakan untuk digunakan, kita perlu memastikan bahwa RStudio menggunakan atau mengaktifkan environment python yang telah kita siapkan.\nUntuk melakukan analisis, kita akan menggunakan beberapa module yang untuk setiap interpreter memiliki cara yang berbeda. Dalam artikel ini, kita akan menggunakan Python, R, dan Julia.\nLoad shapefile yang telah di download dari situs https://www.lapakgis.com/p/shapefile.html. Pada situs itu kita bisa memilih jenis data yang ingin kita gunakan dalam analisis. Password-nya bisa dilihat di https://docs.google.com/document/d/1ap_EgshJbywLgP5ZJ2iJMAFnWngLLKsoDaAF281vCxQ/edit?pli=1. Untuk memahami bagaimana python bekerja dengan GIS, bisa merujuk pada link berikut ini: https://automating-gis-processes.github.io/CSC/notebooks/L2/geopandas-basics.html."
  },
  {
    "objectID": "posts/map_indonesia/index.html#membuat-peta-dasar",
    "href": "posts/map_indonesia/index.html#membuat-peta-dasar",
    "title": "Peta Indonesia dengan R",
    "section": "",
    "text": "Article ini membahas tentang statistik indonesia sebagai cartography dasar untuk mengembangkan analisis lebih lanjut. Pada peta ini, kita akan menggunakan code sederhana dengan tiga bahasa sekaligus.\n\n\nUntuk memastikan renv yang kita gunakan, bekerja pada environment python yang sesuai dengan apa yang kita rencanakan untuk digunakan, kita perlu memastikan bahwa RStudio menggunakan atau mengaktifkan environment python yang telah kita siapkan.\nUntuk melakukan analisis, kita akan menggunakan beberapa module yang untuk setiap interpreter memiliki cara yang berbeda. Dalam artikel ini, kita akan menggunakan Python, R, dan Julia.\nLoad shapefile yang telah di download dari situs https://www.lapakgis.com/p/shapefile.html. Pada situs itu kita bisa memilih jenis data yang ingin kita gunakan dalam analisis. Password-nya bisa dilihat di https://docs.google.com/document/d/1ap_EgshJbywLgP5ZJ2iJMAFnWngLLKsoDaAF281vCxQ/edit?pli=1. Untuk memahami bagaimana python bekerja dengan GIS, bisa merujuk pada link berikut ini: https://automating-gis-processes.github.io/CSC/notebooks/L2/geopandas-basics.html."
  },
  {
    "objectID": "posts/map_indonesia/index.html#konsep-dasar",
    "href": "posts/map_indonesia/index.html#konsep-dasar",
    "title": "Peta Indonesia dengan R",
    "section": "Konsep Dasar",
    "text": "Konsep Dasar\nPemanfaatan energi surya sebagai sumber daya terbarukan berkembang pesat. Pemasangan Pembangkit Listrik Tenaga Surya (PLTS) menjadi solusi utama dalam mendukung pengembangan energi berkelanjutan. Dalam perencanaan pembangunan PLTS, informasi potensi surya menjadi krusial. Salah satu alat yang efektif untuk mengakses data potensi surya adalah penggunaan Shapefile atau SHP dan perannya dalam Sistem Informasi Geografis (SIG).\nDengan memanfaatkan Shapefile, analisis potensi surya dapat dilakukan dengan lebih efisien. Data yang relevan tentang topografi, cakupan lahan, dan kondisi iklim suatu wilayah dapat dimasukkan ke dalam Shapefile. Hal ini memungkinkan perencana energi untuk mengidentifikasi lokasi potensial untuk pembangunan PLTS dengan akurasi yang lebih tinggi.\n\nGlobal Horizontal Irradiance (GHI)\nGlobal Horizontal Irradiance (GHI) umumnya merupakan parameter yang paling relevan saat merencanakan pemasangan Pembangkit Listrik Tenaga Surya (PLTS). GHI mencakup total radiasi surya yang diterima oleh permukaan horizontal, termasuk radiasi langsung dan difusi. Hal ini memberikan estimasi potensi energi surya yang dapat dihasilkan di suatu lokasi, tanpa mempertimbangkan orientasi atau kemiringan panel.\nMemahami GHI di suatu wilayah dapat membantu dalam merencanakan pemasangan PLTS yang optimal. Faktor-faktor seperti penempatan panel, efisiensi konversi energi, dan perhitungan permintaan daya dapat ditentukan berdasarkan data GHI. Selain itu, GHI dapat digunakan untuk memperkirakan produksi energi surya selama periode waktu tertentu, seperti harian atau tahunan.\nLebih jauh, ada dua parameter tambahan yang penting dalam mengevaluasi dan merencanakan pemasangan Pembangkit Listrik Tenaga Surya (PLTS) secara efektif: Output Daya Fotovoltaik Spesifik (PVOUT) dan Irradiansi Normal Langsung (DNI).\n\n\nOutput Daya Fotovoltaik Spesifik (PVOUT)\nPVOUT mengacu pada output daya listrik per unit kapasitas terpasang sistem fotovoltaik (PV). Dalam konteks PLTS, PVOUT memberikan estimasi seberapa efisien panel surya dapat mengubah energi surya menjadi listrik. Pengukuran PVOUT didasarkan pada karakteristik kinerja panel surya yang dipasang di lokasi tertentu.\nPenggunaan PVOUT dalam Shapefile memungkinkan perencana energi untuk memahami seberapa produktif suatu wilayah dalam menghasilkan tenaga listrik dari sumber energi surya. Mengintegrasikan data PVOUT ke dalam Shapefile memberikan pandangan yang lebih holistik tentang potensi SPP, yang memungkinkan pemilihan teknologi panel yang sesuai berdasarkan kondisi geografis dan iklim suatu wilayah.\n\n\nDirect Normal Irradiance (DNI)\nDNI mengukur radiasi surya yang mencapai permukaan Bumi secara langsung tanpa terhalang oleh awan atau partikel atmosfer. Ini merupakan parameter penting karena panel fotovoltaik, khususnya yang menggunakan konsentrator surya, lebih efisien dalam menghasilkan listrik saat terkena sinar matahari langsung.\nDengan menggabungkan informasi DNI ke dalam Shapefile, perencana energi dapat menentukan lokasi dengan intensitas sinar matahari langsung yang lebih tinggi. Ini penting karena SPP yang mengandalkan sinar matahari langsung dapat mencapai hasil optimal di wilayah dengan nilai DNI yang tinggi. Hasilnya, peningkatan efisiensi dapat dicapai dengan memilih lokasi yang tepat berdasarkan data DNI.️"
  },
  {
    "objectID": "posts/map_indonesia/index.html#analysis",
    "href": "posts/map_indonesia/index.html#analysis",
    "title": "Peta Indonesia dengan R",
    "section": "Analysis",
    "text": "Analysis\n\nLangkah-langkah:\n\nUnduh Peta Lokasi Study:\n\nAnda bisa mendapatkan peta administrasi Indonesia dari sumber terbuka seperti peta.web.id atau Wikipedia.\n\nUnduh Data GHI:\n\nData GHI dapat diunduh dari Global Solar Atlas yang disediakan oleh World Bank Group.\n\nInstalasi Paket Python:\n\nPastikan Anda memiliki paket-paket berikut terinstal: geopandas, rasterio, matplotlib, numpy.\n\nOverlay Peta dan Data GHI:\n\nGunakan geopandas untuk memuat peta dan rasterio untuk memuat data GHI.\n\nAnalisis PVOUT:\n\nGunakan pvlib untuk menghitung potensi output energi dari solar PV.\n\n\n\n\nKode Python:\nLangkah paling awal adalah memuat shapefile\nKumpulan data analysis bisa ditemukan di https://energydata.info atau https://globalsolaratlas.info/global-pv-potential-study. Sementara shapefile untuk batas administrasi hingga tingkat desa bisa di dapatkan pada https://geosai.my.id/download-data-batas-desa-per-kabupaten-kota-seluruh-indonesia-edisi-september-2023/.\nJika menggunakan python, instruksinya sederhana, seperti berikut ini:\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\n\n# Membaca shapefile\nshapefile_path = 'data/LapakGIS_Batas_Kabupaten_2024.shp'\ngdf = gpd.read_file(shapefile_path)\n\nSys.setenv(PROJ_LIB = \"/Users/chakraroy/miniconda3/pkgs/proj-9.4.1-hf92c781_1/share/proj/proj.db\")\nSys.setenv(GDAL_DATA = \"/Users/chakraroy/miniconda3/pkgs/gdal-3.6.2-py312hfe88152_5/\")\n\nNamun sepertinya kita akan menemukan masalah karena ukuran file yang terlalu besa untuk dihandle oleh pandas maupun geopandas. Untuk itu kita akan coba menggunakan cara lain, dengan menggunakan julia atau juga menggunakan R. Jika menggunakan Julia, berikut adalah contoh codenya:\nusing Shapes\nusing Plots\n\n# Baca fie SHP secara bertahap\nshp = Shapes.shapefile('data/LapakGIS_Batas_Kabupaten_2024.shp')\nfor feature in shp\n    # Lakukan sesuatu dengan setiap fitur, misalnya:\n    geometry = feature.geometry\n    # Plot geometry \n    Plots.plot!(geometry)\nTetapi kita akan menggunakan R, karena cukup powerfull dalam menangani hal ini berdasarkan rekomendasi yang kami temukan dari hasil desktop research kami."
  },
  {
    "objectID": "posts/map_indonesia/index.html#menggunakan-terra",
    "href": "posts/map_indonesia/index.html#menggunakan-terra",
    "title": "Peta Indonesia dengan R",
    "section": "Menggunakan Terra",
    "text": "Menggunakan Terra\n\nlibrary(sf)\nlibrary(terra)\n\n# Bace shapefile\nshapefile_path &lt;- \"data/LapakGIS_Batas_Kabupaten_2024.shp\"\nshp_sf &lt;- st_read(shapefile_path, options = \"XY\")\n\noptions:        XY \nReading layer `LapakGIS_Batas_Kabupaten_2024' from data source \n  `/Users/chakraroy/Documents/BlogKu/posts/map_indonesia/data/LapakGIS_Batas_Kabupaten_2024.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 533 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 94.97191 ymin: -11.00762 xmax: 141.02 ymax: 6.076832\nz_range:       zmin: -2.35e-05 zmax: 0\nGeodetic CRS:  WGS 84\n\n# konversi objek sf ke terra\nshp_terra &lt;- vect(shp_sf)\n\nplot(shp_terra, col = \"blue\", lwd = 0.03)\n\n\n\n\n\n\n\nFigure 1: Peta Dasar dgn Terra\n\n\n\n\n\n\njawa_timur &lt;- shp_terra[shp_terra$WADMPR == \"Jawa Timur\", ]\n\nplot(jawa_timur, col = \"blue\", lwd = 0.03)\n\n\n\n\n\n\n\nFigure 2: Peta Jawa Timur dgn Terra\n\n\n\n\n\n\nshp_sf\n\nSimple feature collection with 533 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 94.97191 ymin: -11.00762 xmax: 141.02 ymax: 6.076832\nz_range:       zmin: -2.35e-05 zmax: 0\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   KDPKAB KDPPUM        WADMKK           WADMPR\n1    &lt;NA&gt;   &lt;NA&gt;          &lt;NA&gt;             &lt;NA&gt;\n2    &lt;NA&gt;   &lt;NA&gt;          &lt;NA&gt;       Jawa Timur\n3    &lt;NA&gt;     13          &lt;NA&gt;   Sumatera Barat\n4    &lt;NA&gt;     61          &lt;NA&gt; Kalimantan Barat\n5    &lt;NA&gt;     81          &lt;NA&gt;           Maluku\n6    &lt;NA&gt;     82          &lt;NA&gt;     Maluku Utara\n7   11.01     11  Aceh Selatan             Aceh\n8   11.02     11 Aceh Tenggara             Aceh\n9   11.03     11    Aceh Timur             Aceh\n10  11.04     11   Aceh Tengah             Aceh\n                                   METADATA          UPDATED\n1  TASWIL1000020230928_DATA_BATAS_KABUPATEN Lapak GIS - 2024\n2  TASWIL1000020230928_DATA_BATAS_KABUPATEN Lapak GIS - 2024\n3  TASWIL1000020230928_DATA_BATAS_KABUPATEN Lapak GIS - 2024\n4  TASWIL1000020230928_DATA_BATAS_KABUPATEN Lapak GIS - 2024\n5  TASWIL1000020230928_DATA_BATAS_KABUPATEN Lapak GIS - 2024\n6  TASWIL1000020230928_DATA_BATAS_KABUPATEN Lapak GIS - 2024\n7  TASWIL1000020230928_DATA_BATAS_KABUPATEN Lapak GIS - 2024\n8  TASWIL1000020230928_DATA_BATAS_KABUPATEN Lapak GIS - 2024\n9  TASWIL1000020230928_DATA_BATAS_KABUPATEN Lapak GIS - 2024\n10 TASWIL1000020230928_DATA_BATAS_KABUPATEN Lapak GIS - 2024\n                         geometry\n1  MULTIPOLYGON (((98.17921 2....\n2  MULTIPOLYGON Z (((112.8793 ...\n3  MULTIPOLYGON (((100.3296 -1...\n4  MULTIPOLYGON (((109.252 -0....\n5  MULTIPOLYGON (((127.4581 -5...\n6  MULTIPOLYGON (((127.9225 0....\n7  MULTIPOLYGON (((97.59379 2....\n8  MULTIPOLYGON Z (((97.8248 3...\n9  MULTIPOLYGON (((98.01775 4....\n10 MULTIPOLYGON Z (((96.62116 ..."
  },
  {
    "objectID": "posts/map_indonesia/index.html#menggunakan-lwgeom",
    "href": "posts/map_indonesia/index.html#menggunakan-lwgeom",
    "title": "Peta Indonesia dengan R",
    "section": "Menggunakan lwgeom",
    "text": "Menggunakan lwgeom\n\nlibrary(sf)\nlibrary(lwgeom)\n\nshp &lt;- st_read(shapefile_path, options = \"Z\")\n\noptions:        Z \nReading layer `LapakGIS_Batas_Kabupaten_2024' from data source \n  `/Users/chakraroy/Documents/BlogKu/posts/map_indonesia/data/LapakGIS_Batas_Kabupaten_2024.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 533 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 94.97191 ymin: -11.00762 xmax: 141.02 ymax: 6.076832\nz_range:       zmin: -2.35e-05 zmax: 0\nGeodetic CRS:  WGS 84\n\nplot(st_geometry(shp), col = \"darkgrey\", lwd = 0.03)\n\n\n\n\n\n\n\nFigure 3: Peta Dasar dgn lwgeom\n\n\n\n\n\nPlot dengan ggplot2 -&gt;\nTidak direkomendasikan untuk system yang saya gunakan saat ini! coba hanya menggunakan sf, terra dan lwgeom.\n\njawa_timur &lt;- shp[shp$WADMPR == \"Jawa Timur\", ]\n\nplot(st_geometry(jawa_timur), col = \"darkgrey\", lwd = 0.03)\n\n\n\n\n\n\n\nFigure 4: Peta Jawa Timur dgn lwgeom"
  },
  {
    "objectID": "posts/map_with_python/index.html",
    "href": "posts/map_with_python/index.html",
    "title": "Peta Dunia dengan Python",
    "section": "",
    "text": "Untuk menampilkan peta dunia dengan python, setidaknya terdapat 3 buah packages yang bisa digunakan. Diantaranya adalah; folium, geopandas, dan plotly. Sebenarnya masih ada beberapa modul yang bisa kita gunakan selain itu, tetapi dalam tulisan ini kita hanya akan memuat tentang 3 modul tersebut.\nKita dapat menginstalnya menggunakan pip:\nAtau jika menggunakan conda environment, bisa menggunakan:\nSelanjutnya import pustaka bisa dilakukan sekaligus, meskipun dalam tulisan ini, penggunaannya secara terpisah. Atau proses instalasi bisa dilakukan melalui repl-python melalui modul reticulate di R:\nlibrary(reticulate)\n#py_install(c(\"pandas\", \"plotly\", \"folium\", \"geopandas\", \"seaborn\", \"matplotlib\", \"numpy\"))\nuse_condaenv(\"geopython\")\nimport folium\nimport pandas as pd\nimport geopandas as gpd\nimport plotly.express as px"
  },
  {
    "objectID": "posts/map_with_python/index.html#membuat-peta-dasar-dengan-folium",
    "href": "posts/map_with_python/index.html#membuat-peta-dasar-dengan-folium",
    "title": "Peta Dunia dengan Python",
    "section": "Membuat Peta Dasar dengan Folium",
    "text": "Membuat Peta Dasar dengan Folium\nUntuk membuat peta dasar dunia, Folium sangat mudah digunakan:\n\n# Buat peta dengan pusat di (0, 0) dan zoom level 2\nmap = folium.Map(location=[0, 0], zoom_start=2)\n\n# Tampilkan peta\nmap\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\nMenambahkan marker atau circle untuk menandai lokasi tertentu:\n\n# Tambahkan marker di New York\nfolium.Marker([40.7128, -74.0060], popup=\"New York City\").add_to(map)\n\n&lt;folium.map.Marker object at 0x12504e000&gt;\n\n# Tambahkan circle di Tokyo\nfolium.Circle(location=[35.6895, 139.7514], radius=50000, color='red', fill=True).add_to(map)\n\n&lt;folium.vector_layers.Circle object at 0x12509fe30&gt;\n\nmap\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "posts/map_with_python/index.html#membuat-peta-dasar-dengan-geopandas",
    "href": "posts/map_with_python/index.html#membuat-peta-dasar-dengan-geopandas",
    "title": "Peta Dunia dengan Python",
    "section": "Membuat Peta Dasar dengan Geopandas",
    "text": "Membuat Peta Dasar dengan Geopandas\nKonversi Shapefile ke GeoJSON bisa dilakukan dengan cara berikut ini:\n\n#import geopandas as gpd\n\n# Baca shapefile\nshapefile_path = '/Users/chakraroy/Documents/CharObsNote/20_Qmd_Notes/BlogKu/data/ne_110m_admin_0_countries/ne_110m_admin_0_countries.shp'\ngdf = gpd.read_file(shapefile_path)\n\n# Simpan sebagai GeoJSON\ngeojson_path = 'countries.geojson'\ngdf.to_file(geojson_path, driver='GeoJSON')\n\nJika kita memiliki data geospasial dalam format GeoJSON atau shapefile, kita bisa menggunakan GeoPandas untuk memanipulasi data dan Folium untuk memvisualisasikannya. Namun sebelum itu, perlu untuk memastikan nama dari kolom atau feature yang akan kita muat ke dalam peta.\n\n#from IPython.display import Markdown\n#from tabulate import tabulate\n\ngdf.columns.tolist()\n\n['featurecla', 'scalerank', 'LABELRANK', 'SOVEREIGNT', 'SOV_A3', 'ADM0_DIF', 'LEVEL', 'TYPE', 'TLC', 'ADMIN', 'ADM0_A3', 'GEOU_DIF', 'GEOUNIT', 'GU_A3', 'SU_DIF', 'SUBUNIT', 'SU_A3', 'BRK_DIFF', 'NAME', 'NAME_LONG', 'BRK_A3', 'BRK_NAME', 'BRK_GROUP', 'ABBREV', 'POSTAL', 'FORMAL_EN', 'FORMAL_FR', 'NAME_CIAWF', 'NOTE_ADM0', 'NOTE_BRK', 'NAME_SORT', 'NAME_ALT', 'MAPCOLOR7', 'MAPCOLOR8', 'MAPCOLOR9', 'MAPCOLOR13', 'POP_EST', 'POP_RANK', 'POP_YEAR', 'GDP_MD', 'GDP_YEAR', 'ECONOMY', 'INCOME_GRP', 'FIPS_10', 'ISO_A2', 'ISO_A2_EH', 'ISO_A3', 'ISO_A3_EH', 'ISO_N3', 'ISO_N3_EH', 'UN_A3', 'WB_A2', 'WB_A3', 'WOE_ID', 'WOE_ID_EH', 'WOE_NOTE', 'ADM0_ISO', 'ADM0_DIFF', 'ADM0_TLC', 'ADM0_A3_US', 'ADM0_A3_FR', 'ADM0_A3_RU', 'ADM0_A3_ES', 'ADM0_A3_CN', 'ADM0_A3_TW', 'ADM0_A3_IN', 'ADM0_A3_NP', 'ADM0_A3_PK', 'ADM0_A3_DE', 'ADM0_A3_GB', 'ADM0_A3_BR', 'ADM0_A3_IL', 'ADM0_A3_PS', 'ADM0_A3_SA', 'ADM0_A3_EG', 'ADM0_A3_MA', 'ADM0_A3_PT', 'ADM0_A3_AR', 'ADM0_A3_JP', 'ADM0_A3_KO', 'ADM0_A3_VN', 'ADM0_A3_TR', 'ADM0_A3_ID', 'ADM0_A3_PL', 'ADM0_A3_GR', 'ADM0_A3_IT', 'ADM0_A3_NL', 'ADM0_A3_SE', 'ADM0_A3_BD', 'ADM0_A3_UA', 'ADM0_A3_UN', 'ADM0_A3_WB', 'CONTINENT', 'REGION_UN', 'SUBREGION', 'REGION_WB', 'NAME_LEN', 'LONG_LEN', 'ABBREV_LEN', 'TINY', 'HOMEPART', 'MIN_ZOOM', 'MIN_LABEL', 'MAX_LABEL', 'LABEL_X', 'LABEL_Y', 'NE_ID', 'WIKIDATAID', 'NAME_AR', 'NAME_BN', 'NAME_DE', 'NAME_EN', 'NAME_ES', 'NAME_FA', 'NAME_FR', 'NAME_EL', 'NAME_HE', 'NAME_HI', 'NAME_HU', 'NAME_ID', 'NAME_IT', 'NAME_JA', 'NAME_KO', 'NAME_NL', 'NAME_PL', 'NAME_PT', 'NAME_RU', 'NAME_SV', 'NAME_TR', 'NAME_UK', 'NAME_UR', 'NAME_VI', 'NAME_ZH', 'NAME_ZHT', 'FCLASS_ISO', 'TLC_DIFF', 'FCLASS_TLC', 'FCLASS_US', 'FCLASS_FR', 'FCLASS_RU', 'FCLASS_ES', 'FCLASS_CN', 'FCLASS_TW', 'FCLASS_IN', 'FCLASS_NP', 'FCLASS_PK', 'FCLASS_DE', 'FCLASS_GB', 'FCLASS_BR', 'FCLASS_IL', 'FCLASS_PS', 'FCLASS_SA', 'FCLASS_EG', 'FCLASS_MA', 'FCLASS_PT', 'FCLASS_AR', 'FCLASS_JP', 'FCLASS_KO', 'FCLASS_VN', 'FCLASS_TR', 'FCLASS_ID', 'FCLASS_PL', 'FCLASS_GR', 'FCLASS_IT', 'FCLASS_NL', 'FCLASS_SE', 'FCLASS_BD', 'FCLASS_UA', 'geometry']\n\n\nSetelah memastikan namanya, kemudian kita bisa membuat polygon dan menampilkan peta tematiknya:\n\n# Baca data dari shapefile\ngdf = gpd.read_file('countries.geojson')\n\n# Buat peta dengan data dari GeoDataFrame\nmap = folium.Map(location=[0, 0], zoom_start=2)\n\n# Tambahkan layer choropleth\nfolium.Choropleth(\n    geo_data=gdf,\n    data=gdf['POP_EST'],\n    key_on='feature.id',\n    fill_color='YlOrRd',\n    fill_opacity=0.7,\n    line_opacity=0.2,\n    legend_name='Population'\n).add_to(map)\n\n&lt;folium.features.Choropleth object at 0x1250b5a90&gt;\n\nmap\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "posts/map_with_python/index.html#visualisasi-peta-dunia-dengan-plotly",
    "href": "posts/map_with_python/index.html#visualisasi-peta-dunia-dengan-plotly",
    "title": "Peta Dunia dengan Python",
    "section": "Visualisasi Peta Dunia dengan Plotly",
    "text": "Visualisasi Peta Dunia dengan Plotly\nPlotly menawarkan fleksibilitas yang lebih tinggi dalam hal visualisasi. Anda bisa membuat peta choropleth, scatter plot geospasial, dan banyak lagi:\n\n# Buat peta choropleth dengan Plotly\nfig = px.choropleth(\n    gdf,\n    locations=\"ISO_A3\",\n    color=\"POP_EST\",\n    hover_name=\"NAME\",\n    color_continuous_scale=px.colors.sequential.Plasma\n)\nfig.show()\n\n                        \n                                            \n\n\n\nContoh Lebih Lanjut\nUntuk contoh yang lebih kompleks dan fitur-fitur lainnya, Anda bisa merujuk pada dokumentasi resmi Folium, GeoPandas, dan Plotly.\nPilihan Pustaka Lain:\n\nLeaflet: Pustaka JavaScript yang menjadi dasar Folium. Anda bisa menggunakannya secara langsung jika ingin lebih banyak kontrol.\nCartopy: Pustaka Python untuk membuat peta proyeksi.\nShapely: Pustaka untuk manipulasi geometri.\n\nTips:\n\nData: Pastikan data geospasial Anda memiliki format yang benar (GeoJSON, shapefile, CSV dengan kolom latitude dan longitude).\nProyeksi: Pahami konsep proyeksi peta untuk memilih proyeksi yang sesuai dengan data Anda.\nCustomisasi: Anda bisa mengkustomisasi tampilan peta dengan berbagai opsi yang disediakan oleh pustaka-pustaka tersebut.\nInteraktivitas: Tambahkan interaktivitas pada peta Anda dengan fitur seperti popup, tooltip, dan klik.\n\nKesimpulan Dengan Python dan pustaka-pustaka yang tepat, Anda dapat membuat berbagai jenis peta yang informatif dan menarik. Mulai dari peta dasar hingga peta yang sangat kompleks dengan banyak layer dan interaktivitas."
  },
  {
    "objectID": "posts/woldmap_julia/index.html",
    "href": "posts/woldmap_julia/index.html",
    "title": "Peta Dunia dengan Julia",
    "section": "",
    "text": "Julia adalah salah satu programming language yang sedang populer saat ini. Julia pandang sebagai salah satu jenis interpreter yang handal karena menggunakan teknik paralel computing yang memungkinkannya mengeksekusi dan mengolah data dalam jumlah besar dengan kecepatan yang jauh melebihi python bahkan di klaim lebih baik dari R.\nlibrary(reticulate)\nuse_condaenv(\"geopython\")\nCode di atas adalah cara menginstall package di Julia dengan menggunakan shell pada notebook. Setelah memastikan bahwa paket ini telah terinstall, selanjutnya mulai mengimport packages atau module yang akan digunakan . Untuk memastikan kita memiliki data yang akurat, kita akan menggunakan data dari situs berikut ini: Harmonize Ningttime Light. Data pada situs ini merupakan data yang biasa digunakan untuk menganalisis persoalan sosial ekonomi dari setiap negara-negara.\nUntuk mendemonstrasikan kesamaan dan ke-umuman, kita akan menggunakan data dari: MODIS Aerosol Optical Depth (AOD) Juga kita akan menggunakan NDVI dari: NDVI data NASA. Dan sebagai tambahan kita akan menggunakan shapefile dari: Wri Shapefile. Salah satu rujukan kita juga dalam membuat demonstrasi ini adalah berasal dari youtube channel berikut ini: Geospatial data in Julia with Rasters.jl\n# Mengimport module\nusing Rasters, Plots, Statistics, Shapefile, DataFrames, Dates\nMemuat .tif file sebagai raster:\nimport ArchGDAL\npath_to_VIIRS = \"/Users/chakraroy/Documents/CharObsNote/20_Qmd_Notes/BlogKu/data/Harmonized_DN_NTL_2020_simVIIRS.tif\"\n\n\"/Users/chakraroy/Documents/CharObsNote/20_Qmd_Notes/BlogKu/data/Harmonized_DN_NTL_2020_simVIIRS.tif\"\n\nraster = Raster(path_to_VIIRS, lazy=true, checkmem=false)\n\n╭─────────────────────────────╮\n│ 43201×16801 Raster{UInt8,2} │\n├─────────────────────────────┴────────────────────────────────────────── dims ┐\n  ↓ X Projected{Float64} LinRange{Float64}(-180.00416666665, 179.99583189335004, 43201) ForwardOrdered Regular Intervals{Start},\n  → Y Projected{Float64} LinRange{Float64}(74.99583333334999, -65.00416610665, 16801) ReverseOrdered Regular Intervals{Start}\n├──────────────────────────────────────────────────────────────────── metadata ┤\n  Metadata{Rasters.GDALsource} of Dict{String, Any} with 4 entries:\n  \"units\"    =&gt; \"\"\n  \"offset\"   =&gt; 0.0\n  \"filepath\" =&gt; \"/Users/chakraroy/Documents/CharObsNote/20_Qmd_Notes/BlogKu/dat…\n  \"scale\"    =&gt; 1.0\n├────────────────────────────────────────────────────────────────────── raster ┤\n  extent: Extent(X = (-180.00416666665, 180.00416522665003), Y = (-65.00416610665, 75.00416666665))\n\n  crs: GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]\n  filename: \n└──────────────────────────────────────────────────────────────────────────────┘\n\nplot(raster)\n\n\n\n\n\n\n\nFigure 1: World in Night"
  },
  {
    "objectID": "posts/woldmap_julia/index.html#indexing",
    "href": "posts/woldmap_julia/index.html#indexing",
    "title": "Peta Dunia dengan Julia",
    "section": "Indexing",
    "text": "Indexing\nIndex dengan kolom dan nomor baris. Karena raster yang digunakan adalah single band, index band-nya akan selalu sama dengan 1.\n\nraster[10, 10, 1]\n\n0x00\n\n\n\nraster[1000, 1000, 1] |&gt; Int\n\n0\n\n\nIndexing dengan logitude dan latitude\n\nraster[X(Near(77.1025)), Y(Near(28.7041))]\n\n0x3f\n\n\n\nraster[X(Near(77.1025)), Y(Near(28.7041))] |&gt; Int\n\n63"
  },
  {
    "objectID": "posts/woldmap_julia/index.html#shapefiles",
    "href": "posts/woldmap_julia/index.html#shapefiles",
    "title": "Peta Dunia dengan Julia",
    "section": "Shapefiles",
    "text": "Shapefiles\nKita akan melakukan pengolahan spahefile untuk analisis, croping maupun statistik. Kita akan menggunakan shapefile dari: https://github.com/wri/wri-bounds\n\nshp = Shapefile.Table(\"/Users/chakraroy/Documents/CharObsNote/20_Qmd_Notes/BlogKu/data/world_shapefile/in_primary_countries.shp\") |&gt; DataFrame\n\n193×29 DataFrame\n Row │ geometry               ADM0_A3  abbrev   continent      formal_nam      ⋯\n     │ Polygon                String?  String?  String?        String?         ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ Polygon(1530 Points)   AFG      Afg.     Asia           Islamic State o ⋯\n   2 │ Polygon(1642 Points)   AGO      Ang.     Africa         People's Republ\n   3 │ Polygon(554 Points)    ALB      Alb.     Europe         Republic of Alb\n   4 │ Polygon(51 Points)     AND      And.     Europe         Principality of\n   5 │ Polygon(796 Points)    ARE      U.A.E.   Asia           United Arab Emi ⋯\n   6 │ Polygon(4696 Points)   ARG      Arg.     South America  Argentine Repub\n   7 │ Polygon(433 Points)    ARM      Arm.     Asia           Republic of Arm\n   8 │ Polygon(108 Points)    ATG      Ant.B.   North America  Antigua and Bar\n  ⋮  │           ⋮               ⋮        ⋮           ⋮                        ⋱\n 187 │ Polygon(4166 Points)   VNM      Viet.    Asia           Socialist Repub ⋯\n 188 │ Polygon(1015 Points)   VUT      Van.     Oceania        Republic of Van\n 189 │ Polygon(132 Points)    WSM      Samoa    Oceania        Independent Sta\n 190 │ Polygon(1027 Points)   YEM      Yem.     Asia           Republic of Yem\n 191 │ Polygon(2207 Points)   ZAF      S.Af.    Africa         Republic of Sou ⋯\n 192 │ Polygon(1508 Points)   ZMB      Zambia   Africa         Republic of Zam\n 193 │ Polygon(766 Points)    ZWE      Zimb.    Africa         Republic of Zim\n                                                 25 columns and 178 rows omitted\n\n\nUntuk membersihkan datanya, kita bisa melakukan remove setiap non complit data atau data yang hilang (missing data)\n\nshp = dropmissing(shp)\n\n192×29 DataFrame\n Row │ geometry               ADM0_A3  abbrev   continent      formal_nam      ⋯\n     │ Polygon                String   String   String         String          ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ Polygon(1530 Points)   AFG      Afg.     Asia           Islamic State o ⋯\n   2 │ Polygon(1642 Points)   AGO      Ang.     Africa         People's Republ\n   3 │ Polygon(554 Points)    ALB      Alb.     Europe         Republic of Alb\n   4 │ Polygon(51 Points)     AND      And.     Europe         Principality of\n   5 │ Polygon(796 Points)    ARE      U.A.E.   Asia           United Arab Emi ⋯\n   6 │ Polygon(4696 Points)   ARG      Arg.     South America  Argentine Repub\n   7 │ Polygon(433 Points)    ARM      Arm.     Asia           Republic of Arm\n   8 │ Polygon(108 Points)    ATG      Ant.B.   North America  Antigua and Bar\n  ⋮  │           ⋮               ⋮        ⋮           ⋮                        ⋱\n 186 │ Polygon(4166 Points)   VNM      Viet.    Asia           Socialist Repub ⋯\n 187 │ Polygon(1015 Points)   VUT      Van.     Oceania        Republic of Van\n 188 │ Polygon(132 Points)    WSM      Samoa    Oceania        Independent Sta\n 189 │ Polygon(1027 Points)   YEM      Yem.     Asia           Republic of Yem\n 190 │ Polygon(2207 Points)   ZAF      S.Af.    Africa         Republic of Sou ⋯\n 191 │ Polygon(1508 Points)   ZMB      Zambia   Africa         Republic of Zam\n 192 │ Polygon(766 Points)    ZWE      Zimb.    Africa         Republic of Zim\n                                                 25 columns and 177 rows omitted\n\n\nkemudian kita bisa visualisasikan datanya dalam peta\n\nplot(shp.geometry)\n\n\n\n\n\n\n\n\nKita bisa memilih negara atau polygon yang ingin kita tampilkan dengan operasi findall :\n\njapan_index = findall(x -&gt; x == \"Japan\", shp.name)\n\n1-element Vector{Int64}:\n 87\n\n\nVisualisasi polygon dari wilayah atau negara yang dipilih\n\nplot(shp.geometry[japan_index])"
  },
  {
    "objectID": "posts/woldmap_julia/index.html#cropping",
    "href": "posts/woldmap_julia/index.html#cropping",
    "title": "Peta Dunia dengan Julia",
    "section": "Cropping",
    "text": "Cropping\nTerdapat 2 cara untuk cropping, sebagaimana selanjutnya di bawah ini.\n\nCropping dengan Shapes\n\njapan = crop(raster; to = shp.geometry[japan_index])\n\n╭───────────────────────────╮\n│ 3724×2556 Raster{UInt8,2} │\n├───────────────────────────┴──────────────────────────────────────────── dims ┐\n  ↓ X Projected{Float64} LinRange{Float64}(122.94583212155003, 153.97083199745006, 3724) ForwardOrdered Regular Intervals{Start},\n  → Y Projected{Float64} LinRange{Float64}(45.50416678465, 24.212500203149993, 2556) ReverseOrdered Regular Intervals{Start}\n├──────────────────────────────────────────────────────────────────── metadata ┤\n  Metadata{Rasters.GDALsource} of Dict{String, Any} with 4 entries:\n  \"units\"    =&gt; \"\"\n  \"offset\"   =&gt; 0.0\n  \"filepath\" =&gt; \"/Users/chakraroy/Documents/CharObsNote/20_Qmd_Notes/BlogKu/dat…\n  \"scale\"    =&gt; 1.0\n├────────────────────────────────────────────────────────────────────── raster ┤\n  extent: Extent(X = (122.94583212155003, 153.97916533075005), Y = (24.212500203149993, 45.512500117950005))\n\n  crs: GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]\n  filename: \n└──────────────────────────────────────────────────────────────────────────────┘\n\n\nKita akan mendapatkan raster baru, dan kita plot seperti di bawah ini:\n\nplot(japan)\n\n\n\n\n\n\n\n\n\n\nCrop dengan Bounds\n\nbounds = X(Rasters.Between(65.39, 99.94)), Y(Rasters.Between(5.34, 39.27)) #bounding box\n\n↓ X Between((65.39, 99.94)), → Y Between((5.34, 39.27))\n\nraster[bounds...] |&gt; plot"
  },
  {
    "objectID": "posts/woldmap_julia/index.html#masking",
    "href": "posts/woldmap_julia/index.html#masking",
    "title": "Peta Dunia dengan Julia",
    "section": "Masking",
    "text": "Masking\n\njapan_masked = mask(japan, with = shp.geometry[japan_index])\n\n╭───────────────────────────────────────────╮\n│ 3724×2556 Raster{Union{Missing, UInt8},2} │\n├───────────────────────────────────────────┴──────────────────────────── dims ┐\n  ↓ X Projected{Float64} LinRange{Float64}(122.94583212155003, 153.97083199745006, 3724) ForwardOrdered Regular Intervals{Start},\n  → Y Projected{Float64} LinRange{Float64}(45.50416678465, 24.212500203149993, 2556) ReverseOrdered Regular Intervals{Start}\n├──────────────────────────────────────────────────────────────────── metadata ┤\n  Metadata{Rasters.GDALsource} of Dict{String, Any} with 4 entries:\n  \"units\"    =&gt; \"\"\n  \"offset\"   =&gt; 0.0\n  \"filepath\" =&gt; \"/Users/chakraroy/Documents/CharObsNote/20_Qmd_Notes/BlogKu/dat…\n  \"scale\"    =&gt; 1.0\n├────────────────────────────────────────────────────────────────────── raster ┤\n  extent: Extent(X = (122.94583212155003, 153.97916533075005), Y = (24.212500203149993, 45.512500117950005))\n  missingval: missing\n  crs: GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]\n└──────────────────────────────────────────────────────────────────────────────┘\n   ↓ →    45.5042    45.4958    45.4875    …  24.2292    24.2208    24.2125\n 122.946    missing    missing    missing       missing    missing    missing\n   ⋮                                       ⋱              ⋮         \n 153.971    missing    missing    missing       missing    missing    missing\n\n\n\nplot(japan_masked)\n\n\n\n\n\n\n\n\nMenghitung summary statistics\n\nsum(skipmissing(japan_masked)) |&gt; Int |&gt; println\n\n6244738\n\nmean(skipmissing(japan_masked)) |&gt; Float32 |&gt; println\n\n11.361134\n\nmedian(skipmissing(japan_masked)) |&gt; Int |&gt; println\n\n7"
  },
  {
    "objectID": "posts/woldmap_julia/index.html#zonal-statistics",
    "href": "posts/woldmap_julia/index.html#zonal-statistics",
    "title": "Peta Dunia dengan Julia",
    "section": "Zonal Statistics",
    "text": "Zonal Statistics\nMenghitung summary statistics untuk seluruh zone\n\nsol_by_country = zonal(sum, raster; of=shp.geometry)\n\n192-element Vector{Union{Missing, UInt64}}:\n 0x000000000007fd02\n 0x00000000003394fd\n 0x000000000005542c\n 0x00000000000040cb\n 0x00000000001846bc\n 0x0000000000942949\n 0x0000000000037332\n 0x000000000000251f\n 0x0000000000611fe2\n 0x00000000000e2ef9\n                  ⋮\n 0x0000000000000db5\n 0x00000000003e0548\n 0x000000000032bbee\n 0x000000000000183c\n 0x00000000000017fe\n 0x00000000000a5fa4\n 0x000000000060328a\n 0x000000000021abee\n 0x00000000000ba825\n\n\n\nshp.sol = Int.(sol_by_country);\n\n\nsort(shp, :sol, rev=true)\n\n192×30 DataFrame\n Row │ geometry               ADM0_A3  abbrev   continent                forma ⋯\n     │ Polygon                String   String   String                   Strin ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ Polygon(36018 Points)  USA      U.S.A.   North America            Unite ⋯\n   2 │ Polygon(14262 Points)  CHN      China    Asia                     Peopl\n   3 │ Polygon(36331 Points)  RUS      Rus.     Europe                   Russi\n   4 │ Polygon(8542 Points)   IND      India    Asia                     Repub\n   5 │ Polygon(11116 Points)  BRA      Brazil   South America            Feder ⋯\n   6 │ Polygon(68156 Points)  CAN      Can.     North America            Canad\n   7 │ Polygon(2726 Points)   IRN      Iran     Asia                     Islam\n   8 │ Polygon(3640 Points)   TUR      Tur.     Asia                     Repub\n  ⋮  │           ⋮               ⋮        ⋮                ⋮                   ⋱\n 186 │ Polygon(254 Points)    FSM      F.S.M.   Oceania                  Feder ⋯\n 187 │ Polygon(12 Points)     MCO      Mco.     Europe                   Princ\n 188 │ Polygon(9 Points)      NRU      Nauru    Oceania                  Repub\n 189 │ Polygon(709 Points)    KIR      Kir.     Oceania                  Repub\n 190 │ Polygon(1418 Points)   MDV      Mald.    Seven seas (open ocean)  Repub ⋯\n 191 │ Polygon(69 Points)     TUV      Tuv.     Oceania                  Tuval\n 192 │ Polygon(211 Points)    MHL      M. Is.   Oceania                  Repub\n                                                 26 columns and 177 rows omitted"
  },
  {
    "objectID": "posts/woldmap_julia/index.html#datacubes",
    "href": "posts/woldmap_julia/index.html#datacubes",
    "title": "Peta Dunia dengan Julia",
    "section": "Datacubes",
    "text": "Datacubes\nMenggabungkan gambar-gambar untuk membentuk data cube\n\npath = \"/Users/chakraroy/Documents/CharObsNote/20_Qmd_Notes/BlogKu/data/MODISAQ/\"\n\n\"/Users/chakraroy/Documents/CharObsNote/20_Qmd_Notes/BlogKu/data/MODISAQ/\"\n\nfilelist =readdir(path)\n\n24-element Vector{String}:\n \"MYDAL2_M_AER_OD_2020-01.tiff\"\n \"MYDAL2_M_AER_OD_2020-02.tiff\"\n \"MYDAL2_M_AER_OD_2020-03.tiff\"\n \"MYDAL2_M_AER_OD_2020-04.tiff\"\n \"MYDAL2_M_AER_OD_2020-05.tiff\"\n \"MYDAL2_M_AER_OD_2020-06.tiff\"\n \"MYDAL2_M_AER_OD_2020-07.tiff\"\n \"MYDAL2_M_AER_OD_2020-08.tiff\"\n \"MYDAL2_M_AER_OD_2020-09.tiff\"\n \"MYDAL2_M_AER_OD_2020-10.tiff\"\n ⋮\n \"MYDAL2_M_AER_OD_2021-04.tiff\"\n \"MYDAL2_M_AER_OD_2021-05.tiff\"\n \"MYDAL2_M_AER_OD_2021-06.tiff\"\n \"MYDAL2_M_AER_OD_2021-07.tiff\"\n \"MYDAL2_M_AER_OD_2021-08.tiff\"\n \"MYDAL2_M_AER_OD_2021-09.tiff\"\n \"MYDAL2_M_AER_OD_2021-10.tiff\"\n \"MYDAL2_M_AER_OD_2021-11.tiff\"\n \"MYDAL2_M_AER_OD_2021-12.tiff\"\n\ndates = collect(Date(2020,1):Month(1):Date(2021, 12))\n\n24-element Vector{Date}:\n 2020-01-01\n 2020-02-01\n 2020-03-01\n 2020-04-01\n 2020-05-01\n 2020-06-01\n 2020-07-01\n 2020-08-01\n 2020-09-01\n 2020-10-01\n ⋮\n 2021-04-01\n 2021-05-01\n 2021-06-01\n 2021-07-01\n 2021-08-01\n 2021-09-01\n 2021-10-01\n 2021-11-01\n 2021-12-01\n\nbounds = X(Rasters.Between(65.39, 99.94)), Y(Rasters.Between(5.34, 39.27))\n\n↓ X Between((65.39, 99.94)), → Y Between((5.34, 39.27))\n\naod_raster_list = [Raster(i, lazy = true)[bounds...] for i in path .* filelist]\n\n24-element Vector{Raster{UInt8, 2, Tuple{X{Projected{Float64, LinRange{Float64, Int64}, DimensionalData.Dimensions.Lookups.ForwardOrdered, DimensionalData.Dimensions.Lookups.Regular{Float64}, DimensionalData.Dimensions.Lookups.Intervals{DimensionalData.Dimensions.Lookups.Start}, DimensionalData.Dimensions.Lookups.NoMetadata, WellKnownText{GeoFormatTypes.CRS}, Nothing, X{Colon}}}, Y{Projected{Float64, LinRange{Float64, Int64}, DimensionalData.Dimensions.Lookups.ReverseOrdered, DimensionalData.Dimensions.Lookups.Regular{Float64}, DimensionalData.Dimensions.Lookups.Intervals{DimensionalData.Dimensions.Lookups.Start}, DimensionalData.Dimensions.Lookups.NoMetadata, WellKnownText{GeoFormatTypes.CRS}, Nothing, Y{Colon}}}}, Tuple{Band{DimensionalData.Dimensions.Lookups.Categorical{Int64, UnitRange{Int64}, DimensionalData.Dimensions.Lookups.ForwardOrdered, DimensionalData.Dimensions.Lookups.NoMetadata}}}, Matrix{UInt8}, Symbol, DimensionalData.Dimensions.Lookups.Metadata{Rasters.GDALsource, Dict{String, Any}}, UInt8}}:\n UInt8[0x2f 0x2a … 0x3a 0x3e; 0x2e 0x25 … 0x3d 0x43; … ; 0xff 0xff … 0x33 0x39; 0xff 0xff … 0x35 0x3b]\n UInt8[0x22 0x22 … 0x3d 0x47; 0x21 0x20 … 0x3c 0x45; … ; 0x38 0x6c … 0x2d 0x2f; 0x3d 0x79 … 0x2d 0x34]\n UInt8[0x3b 0x2d … 0x40 0x37; 0x4c 0x2a … 0x41 0x40; … ; 0x0d 0xff … 0x43 0x44; 0x0c 0x0d … 0x47 0x4a]\n UInt8[0x36 0x61 … 0x2f 0x35; 0x3f 0x56 … 0x2d 0x36; … ; 0x3d 0x43 … 0x3a 0x36; 0x44 0x3a … 0x30 0x3a]\n UInt8[0x2f 0x28 … 0x32 0x31; 0x2e 0x3a … 0x35 0x30; … ; 0x0f 0x0e … 0x16 0x15; 0x0f 0x0f … 0x17 0x16]\n UInt8[0x27 0x2a … 0x2b 0x36; 0x26 0x28 … 0x2c 0x24; … ; 0x0f 0x0e … 0x22 0x24; 0x0d 0x0e … 0x20 0x26]\n UInt8[0x25 0x39 … 0x33 0x32; 0x22 0x3e … 0x32 0x31; … ; 0x0f 0x1b … 0x40 0x42; 0x0e 0x16 … 0x33 0x40]\n UInt8[0xff 0x50 … 0xff 0xff; 0xff 0x58 … 0xff 0xff; … ; 0x1d 0xff … 0xff 0xff; 0x13 0xff … 0xff 0xff]\n UInt8[0x21 0x2b … 0xff 0x24; 0x26 0x3a … 0xff 0x23; … ; 0x1a 0x14 … 0x13 0xff; 0x2f 0x0e … 0x14 0xff]\n UInt8[0x26 0x29 … 0x22 0x25; 0x26 0x2b … 0x22 0x22; … ; 0x10 0x0d … 0x23 0x25; 0x0f 0x0e … 0x27 0x27]\n ⋮\n UInt8[0x7d 0x37 … 0x35 0x2c; 0x71 0x4b … 0x35 0x2e; … ; 0x89 0xeb … 0x41 0x3f; 0x85 0x13 … 0x39 0x38]\n UInt8[0x47 0x30 … 0x50 0x31; 0x3b 0x37 … 0x33 0x44; … ; 0x24 0x2f … 0x27 0x27; 0x23 0x2c … 0x27 0x2d]\n UInt8[0xff 0xff … 0xff 0xff; 0xff 0xff … 0xff 0xff; … ; 0xff 0xff … 0xff 0xff; 0xff 0xff … 0xff 0xff]\n UInt8[0x5e 0x56 … 0x23 0x1f; 0x5b 0x6a … 0x23 0x1f; … ; 0x0f 0x1a … 0x43 0x42; 0x12 0x11 … 0x3f 0x40]\n UInt8[0x43 0x53 … 0x29 0x44; 0x42 0x56 … 0x45 0x42; … ; 0x12 0x16 … 0xff 0xff; 0x0f 0x0f … 0xff 0xff]\n UInt8[0x4b 0x3b … 0x1b 0x1b; 0x3f 0x44 … 0x1a 0x1a; … ; 0x16 0x12 … 0x2f 0x2c; 0x14 0x0e … 0x2c 0x29]\n UInt8[0x43 0x36 … 0x2b 0x2c; 0x41 0x35 … 0x2a 0x29; … ; 0x19 0x10 … 0x1e 0x1c; 0x12 0x13 … 0x1f 0x19]\n UInt8[0x44 0x44 … 0x33 0x2b; 0x45 0x40 … 0x28 0x2a; … ; 0x0e 0x0d … 0xff 0xff; 0x0d 0x0b … 0xff 0xff]\n UInt8[0x44 0x34 … 0x25 0x2e; 0x44 0x34 … 0x24 0x2a; … ; 0xff 0xff … 0x2a 0x27; 0xff 0xff … 0x2a 0x29]\n\ntimestamps = collect(1:length(aod_raster_list))\n\n24-element Vector{Int64}:\n  1\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n 10\n  ⋮\n 16\n 17\n 18\n 19\n 20\n 21\n 22\n 23\n 24\n\naod_series = RasterSeries(aod_raster_list, Ti(timestamps))\n\n╭───────────────────────────────────╮\n│ 24-element RasterSeries{Raster,1} │\n├───────────────────────────────────┴───────────────────────────── dims ┐\n  ↓ Ti Sampled{Int64} [1, 2, …, 23, 24] ForwardOrdered Irregular Points\n├─────────────────────────────────────────────────────────────── raster ┤\n  extent: Extent(X = (65.4, 99.89999999999999), Y = (5.400000000000006, 39.20000000000001))\n  missingval: 0x00\n  crs: GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]\n└───────────────────────────────────────────────────────────────────────┘\n  1  …  UInt8[0x2f 0x2a … 0x3a 0x3e; 0x2e 0x25 … 0x3d 0x43; … ; 0xff 0xff … 0x33 0x39; 0xff 0xff … 0x35 0x3b]\n  2     UInt8[0x22 0x22 … 0x3d 0x47; 0x21 0x20 … 0x3c 0x45; … ; 0x38 0x6c … 0x2d 0x2f; 0x3d 0x79 … 0x2d 0x34]\n  3     UInt8[0x3b 0x2d … 0x40 0x37; 0x4c 0x2a … 0x41 0x40; … ; 0x0d 0xff … 0x43 0x44; 0x0c 0x0d … 0x47 0x4a]\n  4     UInt8[0x36 0x61 … 0x2f 0x35; 0x3f 0x56 … 0x2d 0x36; … ; 0x3d 0x43 … 0x3a 0x36; 0x44 0x3a … 0x30 0x3a]\n  5     UInt8[0x2f 0x28 … 0x32 0x31; 0x2e 0x3a … 0x35 0x30; … ; 0x0f 0x0e … 0x16 0x15; 0x0f 0x0f … 0x17 0x16]\n  6  …  UInt8[0x27 0x2a … 0x2b 0x36; 0x26 0x28 … 0x2c 0x24; … ; 0x0f 0x0e … 0x22 0x24; 0x0d 0x0e … 0x20 0x26]\n  ⋮  ⋱  \n 20     UInt8[0x43 0x53 … 0x29 0x44; 0x42 0x56 … 0x45 0x42; … ; 0x12 0x16 … 0xff 0xff; 0x0f 0x0f … 0xff 0xff]\n 21  …  UInt8[0x4b 0x3b … 0x1b 0x1b; 0x3f 0x44 … 0x1a 0x1a; … ; 0x16 0x12 … 0x2f 0x2c; 0x14 0x0e … 0x2c 0x29]\n 22     UInt8[0x43 0x36 … 0x2b 0x2c; 0x41 0x35 … 0x2a 0x29; … ; 0x19 0x10 … 0x1e 0x1c; 0x12 0x13 … 0x1f 0x19]\n 23     UInt8[0x44 0x44 … 0x33 0x2b; 0x45 0x40 … 0x28 0x2a; … ; 0x0e 0x0d … 0xff 0xff; 0x0d 0x0b … 0xff 0xff]\n 24     UInt8[0x44 0x34 … 0x25 0x2e; 0x44 0x34 … 0x24 0x2a; … ; 0xff 0xff … 0x2a 0x27; 0xff 0xff … 0x2a 0x29]\n\naod_datacube = Rasters.combine(aod_series, Ti)[bounds...]\n\n╭────────────────────────────╮\n│ 345×338×24 Raster{UInt8,3} │\n├────────────────────────────┴─────────────────────────────────────────── dims ┐\n  ↓ X  Projected{Float64} LinRange{Float64}(65.4, 99.8, 345) ForwardOrdered Regular Intervals{Start},\n  → Y  Projected{Float64} LinRange{Float64}(39.10000000000001, 5.400000000000006, 338) ReverseOrdered Regular Intervals{Start},\n  ↗ Ti Sampled{Int64} [1, 2, …, 23, 24] ForwardOrdered Irregular Points\n├──────────────────────────────────────────────────────────────────── metadata ┤\n  Metadata{Rasters.GDALsource} of Dict{String, Any} with 4 entries:\n  \"units\"    =&gt; \"\"\n  \"offset\"   =&gt; 0.0\n  \"filepath\" =&gt; \"/Users/chakraroy/Documents/CharObsNote/20_Qmd_Notes/BlogKu/dat…\n  \"scale\"    =&gt; 1.0\n├────────────────────────────────────────────────────────────────────── raster ┤\n  extent: Extent(X = (65.4, 99.89999999999999), Y = (5.400000000000006, 39.20000000000001), Ti = (1, 24))\n  missingval: 0x00\n  crs: GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]\n└──────────────────────────────────────────────────────────────────────────────┘\n[:, :, 1]\n  ↓ →    39.1    39.0    38.9    38.8  …     5.7     5.6     5.5     5.4\n  ⋮                                    ⋱     ⋮                    \n 99.8  0xff    0xff    0xff    0xff    …  0x33    0x2d    0x35    0x3b\n\n\nPlot datacube\n\nview(aod_datacube,  Ti(1)) |&gt; plot\n\n\n\n\n\n\n\n\nMenemukan time series untuk sebuah pixel yang ditentukan\n\naod_datacube[X(Near(77.1025)), Y(Near(28.7041))] |&gt; plot"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Membuat Peta Dunia dengan R",
    "section": "",
    "text": "Sebelum memulai membuat peta dunia, kita perlu untuk memastikan paket yang akan digunakan dalam memuat gambar peta dunia dalam sebuah plot area. Ada dua cara membuat peta dunia menggunakan , yaitu dengan ggplot2 dan dapat juga menggunakan leaflet. Untuk itu perlu dipastikan kedua paket atau modul ini terinstal.\n\n#install.packages(c(\"ggplot2\", \"sf\", \"rnaturalearth\", \"rnaturalearthdata\"))\n#install.packages(c(\"ggplot2\", \"maps\"))\n\nProses di atas bisa diabaikan jika kita telah memastikan instalasinya telah dilakukan (bisa di comment saja). Selanjutnya kita mendeklarasikan penggunaannya.\n\nlibrary(ggplot2)\nlibrary(maps)\n\n\n\nSelanjutnya memuat data pada sebuah variabel untuk dapat digunakan berulang.\n\n# Memuat data peta dunia\nworld_map &lt;- map_data(\"world2\")\n\n# Menggambar peta dengan ggplot2\nggplot(world_map, aes(x = long, y = lat, group = group)) +\n  geom_polygon(fill = \"lightgray\", color = \"black\", size = 0.03) +\n  coord_fixed()  # Mengatur rasio aspek agar sesuai dengan peta dunia\n\n\n\n\n\n\n\nFigure 1: Peta Dunia Utuh\n\n\n\n\n\nKita coba periksa datanya dulu untuk memastikan apa saja yang ada di dalamnya (rows dan cols).\n\n# Library knitr untuk akses fungsi kable\nlibrary(knitr)\n\nkable(head(world_map))\n\n\n\nTable 1: Tabel Peta Dunia\n\n\n\n\n\n\nlong\nlat\ngroup\norder\nregion\nsubregion\n\n\n\n\n290.1009\n12.45200\n1\n1\nAruba\nNA\n\n\n290.1043\n12.42300\n1\n2\nAruba\nNA\n\n\n290.0578\n12.43853\n1\n3\nAruba\nNA\n\n\n289.9958\n12.50049\n1\n4\nAruba\nNA\n\n\n289.9339\n12.54697\n1\n5\nAruba\nNA\n\n\n289.9491\n12.59707\n1\n6\nAruba\nNA\n\n\n\n\n\n\n\n\n\n\n\nDari data, sepertinya akan sangat sulit untuk memanipulasi peta berdasarkan dataframe untuk menghilangkan Antarctica dari plot mapnya, sehingga diperlukan cara dengan scale_y_continuous(limits=c(-56, 90)). Dengan begitu, kita menggeser display area tidak memuat wilayah di bawah garis latitude -56.\n\n# Membuat peta dunia tanpa Antarctica dengan rasio aspek tetap\nggplot(world_map, aes(x = long, y = lat, group = group)) +\n  geom_polygon(fill = \"gray80\", color = \"black\", size = 0.03) +\n  coord_fixed() +\n  scale_y_continuous(limits = c(-56, 90))  # Mengatur batas sumbu y\n\n\n\n\n\n\n\nFigure 2: Peta Dunia Tanpa Antarctica\n\n\n\n\n\n\n\n\nAtau dari peta ini, kita bisa menghilangkan elemen polygon dari dataframenya langsung, seperti Wilayah Antarctica, sebagaimana berikut ini:\n\n# Library dplyr untuk fungsi %&gt;%\nlibrary(dplyr)\n\nworld_map_no_antarctica &lt;- world_map %&gt;%\n  filter(!region %in% c(\"Antarctica\"))\n\nggplot(world_map_no_antarctica, aes(x = long, y = lat, group = group)) +\n  geom_polygon(fill = \"lightgray\", color = \"black\", size = 0.03) +\n  coord_fixed()  # Mengatur rasio aspek agar sesuai dengan peta dunia\n\n\n\n\n\n\n\nFigure 3: Peta Dunia Tanpa Antarctica 2\n\n\n\n\n\n\n\n\nKita coba modif lagi dengan menghilangkan grid serta label x dan y axes-nya:\n\n#library(ggplot2)\n#library(maps)\n#library(dplyr)\n\n# Memuat data peta dunia\nworld_map &lt;- map_data(\"world2\")\n\nworld_map_no_antarctica &lt;- world_map %&gt;%\n  filter(!region %in% c(\"Antarctica\"))\n\nggplot(world_map_no_antarctica, aes(x = long, y = lat, group = group)) +\n  geom_polygon(fill = \"lightgray\", color = \"black\", size = 0.03) +\n  coord_fixed() +  # Mengatur rasio aspek agar sesuai dengan peta dunia\n  theme_void() +  # Menghilangkan grid dan label sumbu\n  theme(panel.border = element_rect(color = \"black\", fill = NA, linewidth = 0.5))  # Menambahkan border pada plot\n\n\n\n\n\n\n\nFigure 4: Peta Dunia No Grid"
  },
  {
    "objectID": "posts/post-with-code/index.html#membuat-peta-dunia-menggunakan-ggplot2",
    "href": "posts/post-with-code/index.html#membuat-peta-dunia-menggunakan-ggplot2",
    "title": "Membuat Peta Dunia dengan R",
    "section": "",
    "text": "Sebelum memulai membuat peta dunia, kita perlu untuk memastikan paket yang akan digunakan dalam memuat gambar peta dunia dalam sebuah plot area. Ada dua cara membuat peta dunia menggunakan , yaitu dengan ggplot2 dan dapat juga menggunakan leaflet. Untuk itu perlu dipastikan kedua paket atau modul ini terinstal.\n\n#install.packages(c(\"ggplot2\", \"sf\", \"rnaturalearth\", \"rnaturalearthdata\"))\n#install.packages(c(\"ggplot2\", \"maps\"))\n\nProses di atas bisa diabaikan jika kita telah memastikan instalasinya telah dilakukan (bisa di comment saja). Selanjutnya kita mendeklarasikan penggunaannya.\n\nlibrary(ggplot2)\nlibrary(maps)\n\n\n\nSelanjutnya memuat data pada sebuah variabel untuk dapat digunakan berulang.\n\n# Memuat data peta dunia\nworld_map &lt;- map_data(\"world2\")\n\n# Menggambar peta dengan ggplot2\nggplot(world_map, aes(x = long, y = lat, group = group)) +\n  geom_polygon(fill = \"lightgray\", color = \"black\", size = 0.03) +\n  coord_fixed()  # Mengatur rasio aspek agar sesuai dengan peta dunia\n\n\n\n\n\n\n\nFigure 1: Peta Dunia Utuh\n\n\n\n\n\nKita coba periksa datanya dulu untuk memastikan apa saja yang ada di dalamnya (rows dan cols).\n\n# Library knitr untuk akses fungsi kable\nlibrary(knitr)\n\nkable(head(world_map))\n\n\n\nTable 1: Tabel Peta Dunia\n\n\n\n\n\n\nlong\nlat\ngroup\norder\nregion\nsubregion\n\n\n\n\n290.1009\n12.45200\n1\n1\nAruba\nNA\n\n\n290.1043\n12.42300\n1\n2\nAruba\nNA\n\n\n290.0578\n12.43853\n1\n3\nAruba\nNA\n\n\n289.9958\n12.50049\n1\n4\nAruba\nNA\n\n\n289.9339\n12.54697\n1\n5\nAruba\nNA\n\n\n289.9491\n12.59707\n1\n6\nAruba\nNA\n\n\n\n\n\n\n\n\n\n\n\nDari data, sepertinya akan sangat sulit untuk memanipulasi peta berdasarkan dataframe untuk menghilangkan Antarctica dari plot mapnya, sehingga diperlukan cara dengan scale_y_continuous(limits=c(-56, 90)). Dengan begitu, kita menggeser display area tidak memuat wilayah di bawah garis latitude -56.\n\n# Membuat peta dunia tanpa Antarctica dengan rasio aspek tetap\nggplot(world_map, aes(x = long, y = lat, group = group)) +\n  geom_polygon(fill = \"gray80\", color = \"black\", size = 0.03) +\n  coord_fixed() +\n  scale_y_continuous(limits = c(-56, 90))  # Mengatur batas sumbu y\n\n\n\n\n\n\n\nFigure 2: Peta Dunia Tanpa Antarctica\n\n\n\n\n\n\n\n\nAtau dari peta ini, kita bisa menghilangkan elemen polygon dari dataframenya langsung, seperti Wilayah Antarctica, sebagaimana berikut ini:\n\n# Library dplyr untuk fungsi %&gt;%\nlibrary(dplyr)\n\nworld_map_no_antarctica &lt;- world_map %&gt;%\n  filter(!region %in% c(\"Antarctica\"))\n\nggplot(world_map_no_antarctica, aes(x = long, y = lat, group = group)) +\n  geom_polygon(fill = \"lightgray\", color = \"black\", size = 0.03) +\n  coord_fixed()  # Mengatur rasio aspek agar sesuai dengan peta dunia\n\n\n\n\n\n\n\nFigure 3: Peta Dunia Tanpa Antarctica 2\n\n\n\n\n\n\n\n\nKita coba modif lagi dengan menghilangkan grid serta label x dan y axes-nya:\n\n#library(ggplot2)\n#library(maps)\n#library(dplyr)\n\n# Memuat data peta dunia\nworld_map &lt;- map_data(\"world2\")\n\nworld_map_no_antarctica &lt;- world_map %&gt;%\n  filter(!region %in% c(\"Antarctica\"))\n\nggplot(world_map_no_antarctica, aes(x = long, y = lat, group = group)) +\n  geom_polygon(fill = \"lightgray\", color = \"black\", size = 0.03) +\n  coord_fixed() +  # Mengatur rasio aspek agar sesuai dengan peta dunia\n  theme_void() +  # Menghilangkan grid dan label sumbu\n  theme(panel.border = element_rect(color = \"black\", fill = NA, linewidth = 0.5))  # Menambahkan border pada plot\n\n\n\n\n\n\n\nFigure 4: Peta Dunia No Grid"
  },
  {
    "objectID": "posts/post-with-code/index.html#peta-dunia-dengan-leaflet",
    "href": "posts/post-with-code/index.html#peta-dunia-dengan-leaflet",
    "title": "Membuat Peta Dunia dengan R",
    "section": "Peta Dunia dengan leaflet",
    "text": "Peta Dunia dengan leaflet\nSama dengan paket-paket lainnya, sebelum digunakan, pastikan bahwa paket atau modul telah terinstal pada environment yang digunakan. bida dilakukan dengan mengetikkan perintah instalasi saja, yaitu: install.packages(\"leaflet\").\n\nlibrary(leaflet)\nleaflet() %&gt;%\n  addTiles() %&gt;%\n  setView(lng = 0, lat = 0, zoom = 2)\n\n\n\n\n\n\n\nFigure 5: Peta Dunia Dengan Leaflet\n\n\n\n\n\nMenampilkan Marker Pada leaflet\n\nleaflet() %&gt;%\n  addTiles() %&gt;%\n  setView(lng = 106.8456, lat = -6.2088, zoom = 5) %&gt;%\n  addMarkers(lng = 106.8456, lat = -6.2088, popup = \"Jakarta\")\n\n\n\n\n\n\n\nFigure 6: Peta Dunia Dengan Leaflet\n\n\n\n\n\n\nMenambahkan Layer\n\nleaflet() %&gt;%\n  addTiles() %&gt;%\n  addPolygons(lng = c(106.8456, 107.8456, 108.8456), lat = c(-6.2088, -7.2088, -6.2088), color = \"blue\")\n\n\n\n\n\n\n\nFigure 7: Peta Dunia Dengan Leaflet\n\n\n\n\n\n\nInteraktifitas\n\nleaflet() %&gt;%\n  addTiles() %&gt;%\n  addMarkers(lng = 106.8456, lat = -6.2088, popup = \"&lt;b&gt;Jakarta&lt;/b&gt;&lt;br&gt;Populasi: 10 juta\")\n\n\n\n\n\n\n\nIntegrasi Realtime\n\nleaflet() %&gt;%\n  addTiles() %&gt;%\n  addWMSTiles(\n    \"https://mesonet.agron.iastate.edu/cgi-bin/wms/nexrad/n0r.cgi\",\n    layers = \"nexrad-n0r-900913\",\n    options = WMSTileOptions(format = \"image/png\", transparent = TRUE),\n    attribution = \"Weather data © 2024 IEM Nexrad\"\n  )\n\n\n\n\n\n\n\nVisualisasi Data\n\nurl &lt;- \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_week.csv\"\nearthquakes &lt;- read.csv(url)\n\n# Filter data untuk gempa bumi dengan magnitudo di atas 4.0\nsignificant_earthquakes &lt;- earthquakes %&gt;%\n  filter(mag &gt;= 4.0)\n\n# Membuat peta\nleaflet(data = significant_earthquakes) %&gt;%\n  addTiles() %&gt;%\n  addCircleMarkers(\n    ~longitude, ~latitude,\n    radius = ~mag, # Ukuran marker berdasarkan magnitudo\n    color = ~ifelse(mag &gt;= 5, \"red\", \"blue\"), # Warna berdasarkan magnitudo\n    popup = ~paste(\"Lokasi:\", place, \"&lt;br&gt;Magnitudo:\", mag)\n  ) %&gt;%\n  setView(lng = 0, lat = 0, zoom = 2)\n\n\n\n\n\n\n\nCustomisasi Tampilan\nMenggunakan Tile Providers yang Berbeda: Kita bisa mengubah tampilan dasar peta dengan menggunakan berbagai tile providers yang tersedia. Misalnya, menggunakan tile dari Stamen atau CartoDB:\n\nleaflet() %&gt;%\n  addProviderTiles(providers$Stadia.StamenWatercolor) %&gt;%\n  setView(lng = 0, lat = 0, zoom = 2)\n\n\n\n\n\nMenambahkan Custom Icons: Kita bisa menambahkan ikon khusus untuk marker. Misalnya, menggunakan ikon gambar:\n\ncustom_icon &lt;- makeIcon(\n  iconUrl = \"https://cdn-icons-png.flaticon.com/512/535/535239.png\",\n  iconWidth = 30, iconHeight = 30\n)\n\nleaflet() %&gt;%\n  addTiles() %&gt;%\n  addMarkers(lng = 106.8456, lat = -6.2088, icon = custom_icon, popup = \"Jakarta\")\n\n\n\n\n\nMengubah Warna dan Ukuran Marker: Kita bisa mengubah warna dan ukuran marker berdasarkan data tertentu. Misalnya, mengubah warna berdasarkan magnitudo gempa:\n\n# Contoh data gempa\ndata &lt;- data.frame(\n  lat = c(-6.2088, -7.2504, -8.3405),\n  lng = c(106.8456, 107.6098, 115.0920),\n  mag = c(4.5, 5.2, 6.1)\n)\n\nleaflet(data) %&gt;%\n  addTiles() %&gt;%\n  addCircleMarkers(\n    ~lng, ~lat,\n    radius = ~mag * 2, # Ukuran marker berdasarkan magnitudo\n    color = ~ifelse(mag &gt;= 5, \"red\", \"blue\"), # Warna berdasarkan magnitudo\n    popup = ~paste(\"Magnitudo:\", mag)\n  )\n\n\n\n\n\nMenambahkan Kontrol Layer: Kita bisa menambahkan kontrol layer untuk memungkinkan pengguna mengaktifkan atau menonaktifkan layer tertentu:\n\nleaflet() %&gt;%\n  addTiles(group = \"OpenStreetMap\") %&gt;%\n  addProviderTiles(providers$Stadia.AlidadeSmooth, group = \"Toner\") %&gt;%\n  addLayersControl(\n    baseGroups = c(\"OpenStreetMap\", \"Toner\"),\n    options = layersControlOptions(collapsed = FALSE)\n  )\n\n\n\n\n\nMenambahkan Poligon dengan Style Khusus: Kita bisa menambahkan poligon dengan style khusus seperti warna, ketebalan garis, dan transparansi:\n\nleaflet() %&gt;%\n  addTiles() %&gt;%\n  addPolygons(\n    lng = c(106.8456, 107.8456, 108.8456),\n    lat = c(-6.2088, -7.2088, -6.2088),\n    color = \"blue\",\n    weight = 2,\n    opacity = 0.5,\n    fillColor = \"blue\",\n    fillOpacity = 0.3\n  )\n\n\n\n\n\nAda banyak pilihan tile providers yang bisa kita gunakan dengan leaflet di R untuk mengubah tampilan peta Kita. Berikut adalah beberapa contoh tile providers yang populer:\n# OpenStreetMap\nleaflet() %&gt;%\n  addProviderTiles(providers$OpenStreetMap)\n\n# Stamen(Toner, Watercolor, Terrain)\nleaflet() %&gt;%\n  addProviderTiles(providers$Stamen.Toner) %&gt;%\n  addProviderTiles(providers$Stamen.Watercolor) %&gt;%\n  addProviderTiles(providers$Stamen.Terrain)\n\n# CartoDB(Positron, DarkMatter)\nleaflet() %&gt;%\n  addProviderTiles(providers$CartoDB.Positron) %&gt;%\n  addProviderTiles(providers$CartoDB.DarkMatter)\n\n# Esri(WorldStreetMap, WorldImagery)\nleaflet() %&gt;%\n  addProviderTiles(providers$Esri.WorldStreetMap) %&gt;%\n  addProviderTiles(providers$Esri.WorldImagery)\n\n# HERE Maps (memerlukan registrasi atau tidak gratis)\nleaflet() %&gt;%\n  addProviderTiles(providers$HERE.terrainDay, options = providerTileOptions(apiKey = \"YOUR_API_KEY\"))\n\n# Mapbox\nleaflet() %&gt;%\n  addProviderTiles(providers$MapBox, options = providerTileOptions(id = \"mapbox/streets-v11\", accessToken = \"YOUR_ACCESS_TOKEN\"))\nLengkapnya ada pada link berikut ini: Leaflet Tile Provider."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Blog ini kami buat dengan Quarto dan diedit menggunakan RStudio. Kami mengucapkan Selamat Datang!\n\nSelamat menikmati history dari petualangan belajar kami, terkait isu atau topik yang memuat hal terkait coding, engineering, science, atau bahkan hanya sekedar resep masakan. Silahkan mengcopy, menyebarkan ataupun memodifikasi apa yang telah kami buat dan muat dalam blog ini. Semoga bermanfaat!.\nSalam hangat dari kami,\nChakra Roy"
  },
  {
    "objectID": "posts/map_indonesia/Untitled.html",
    "href": "posts/map_indonesia/Untitled.html",
    "title": "BlogKu",
    "section": "",
    "text": "import geemap\nimport ee"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BlogKu",
    "section": "",
    "text": "Profil Kesehatan Indonesia\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPeta Indonesia dengan R\n\n\n\n\n\n\nreferences\n\n\ncode\n\n\nanalysis\n\n\nR\n\n\n\n\n\n\n\n\n\nSep 2, 2024\n\n\nChakra Roy\n\n\n\n\n\n\n\n\n\n\n\n\nMembuat Peta Dunia dengan R\n\n\n\n\n\n\nreferences\n\n\ncode\n\n\nanalysis\n\n\nR\n\n\n\n\n\n\n\n\n\nAug 30, 2024\n\n\nChakra Roy\n\n\n\n\n\n\n\n\n\n\n\n\nPeta Dunia dengan Julia\n\n\n\n\n\n\nreferences\n\n\ncode\n\n\nanalysis\n\n\njulia\n\n\n\n\n\n\n\n\n\nAug 30, 2024\n\n\nChakra Roy\n\n\n\n\n\n\n\n\n\n\n\n\nPeta Dunia dengan Python\n\n\n\n\n\n\nreferences\n\n\ncode\n\n\nanalysis\n\n\npython\n\n\n\n\n\n\n\n\n\nAug 30, 2024\n\n\nChakra Roy\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nAug 27, 2024\n\n\nChakra Roy\n\n\n\n\n\n\nNo matching items"
  }
]